<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sgy.feiyue.crms.dao.ClassroomMapper" >
  <resultMap id="BaseResultMap" type="com.sgy.feiyue.crms.common.entity.Classroom" >
    <id column="room_id" property="roomId" jdbcType="VARCHAR" />
    <result column="room_number" property="roomNumber" jdbcType="VARCHAR" />
    <result column="room_name" property="roomName" jdbcType="VARCHAR" />
    <result column="room_state" property="roomState" jdbcType="VARCHAR" />
    <result column="room_type" property="roomType" jdbcType="VARCHAR" />
    <result column="room_capacity" property="roomCapacity" jdbcType="INTEGER" />
    <result column="room_building" property="roomBuilding" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    room_id, room_number, room_name, room_state, room_type, room_capacity, room_building
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sgy.feiyue.crms.common.entity.ClassroomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from classroom
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from classroom
    where room_id = #{roomId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from classroom
    where room_id = #{roomId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.sgy.feiyue.crms.common.entity.Classroom" >
    insert into classroom (room_id, room_number, room_name, 
      room_state, room_type, room_capacity, 
      room_building)
    values (#{roomId,jdbcType=VARCHAR}, #{roomNumber,jdbcType=VARCHAR}, #{roomName,jdbcType=VARCHAR}, 
      #{roomState,jdbcType=VARCHAR}, #{roomType,jdbcType=VARCHAR}, #{roomCapacity,jdbcType=INTEGER}, 
      #{roomBuilding,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sgy.feiyue.crms.common.entity.Classroom" >
    insert into classroom
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="roomNumber != null" >
        room_number,
      </if>
      <if test="roomName != null" >
        room_name,
      </if>
      <if test="roomState != null" >
        room_state,
      </if>
      <if test="roomType != null" >
        room_type,
      </if>
      <if test="roomCapacity != null" >
        room_capacity,
      </if>
      <if test="roomBuilding != null" >
        room_building,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roomId != null" >
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="roomNumber != null" >
        #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="roomName != null" >
        #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="roomState != null" >
        #{roomState,jdbcType=VARCHAR},
      </if>
      <if test="roomType != null" >
        #{roomType,jdbcType=VARCHAR},
      </if>
      <if test="roomCapacity != null" >
        #{roomCapacity,jdbcType=INTEGER},
      </if>
      <if test="roomBuilding != null" >
        #{roomBuilding,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sgy.feiyue.crms.common.entity.ClassroomExample" resultType="java.lang.Integer" >
    select count(*) from classroom
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.sgy.feiyue.crms.common.entity.Classroom" >
    update classroom
    <set >
      <if test="roomNumber != null" >
        room_number = #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="roomName != null" >
        room_name = #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="roomState != null" >
        room_state = #{roomState,jdbcType=VARCHAR},
      </if>
      <if test="roomType != null" >
        room_type = #{roomType,jdbcType=VARCHAR},
      </if>
      <if test="roomCapacity != null" >
        room_capacity = #{roomCapacity,jdbcType=INTEGER},
      </if>
      <if test="roomBuilding != null" >
        room_building = #{roomBuilding,jdbcType=VARCHAR},
      </if>
    </set>
    where room_id = #{roomId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sgy.feiyue.crms.common.entity.Classroom" >
    update classroom
    set room_number = #{roomNumber,jdbcType=VARCHAR},
      room_name = #{roomName,jdbcType=VARCHAR},
      room_state = #{roomState,jdbcType=VARCHAR},
      room_type = #{roomType,jdbcType=VARCHAR},
      room_capacity = #{roomCapacity,jdbcType=INTEGER},
      room_building = #{roomBuilding,jdbcType=VARCHAR}
    where room_id = #{roomId,jdbcType=VARCHAR}
  </update>

  <insert id="insertBatch" parameterType="java.util.List">
    insert into classroom(room_id, room_number, room_name,
    room_state, room_type, room_capacity, room_building)
    values
    <foreach collection="classrooms" item="item" separator=",">
      (#{item.roomId,jdbcType=VARCHAR}, #{item.roomNumber,jdbcType=VARCHAR}, #{item.roomName,jdbcType=VARCHAR},
      #{item.roomState,jdbcType=VARCHAR}, #{item.roomType,jdbcType=VARCHAR}, #{item.roomCapacity,jdbcType=INTEGER},
      #{item.roomBuilding,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>